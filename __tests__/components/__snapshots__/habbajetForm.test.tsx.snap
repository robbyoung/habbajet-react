// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Habbajet Form Component can render a delete button 1`] = `
<RCTScrollView>
  <View>
    <View
      style={
        Object {
          "backgroundColor": "#ffffff",
          "height": "100%",
          "paddingHorizontal": 20,
          "paddingVertical": 10,
        }
      }
    >
      <View
        style={
          Object {
            "marginBottom": 15,
          }
        }
      >
        <Text
          style={
            Array [
              Object {
                "color": "#959595",
                "fontFamily": "Abel",
                "fontSize": 20,
                "margin": 0,
                "padding": 0,
              },
            ]
          }
        >
          Name
        </Text>
        <View
          style={
            Object {
              "flexDirection": "row",
            }
          }
        >
          <TextInput
            allowFontScaling={true}
            keyboardType="default"
            onChangeText={[Function]}
            rejectResponderTermination={true}
            style={
              Object {
                "borderColor": "#959595",
                "borderWidth": 1,
                "flex": 1,
                "fontFamily": "Abel",
                "fontSize": 30,
                "paddingLeft": 10,
              }
            }
            testID="input-Name"
            underlineColorAndroid="transparent"
            value="Name"
          />
        </View>
        <View />
      </View>
      <View
        style={
          Object {
            "marginBottom": 15,
          }
        }
      >
        <Text
          style={
            Array [
              Object {
                "color": "#959595",
                "fontFamily": "Abel",
                "fontSize": 20,
                "margin": 0,
                "padding": 0,
              },
            ]
          }
        >
          Value
        </Text>
        <View
          style={
            Object {
              "flexDirection": "row",
            }
          }
        >
          <TextInput
            allowFontScaling={true}
            keyboardType="numeric"
            onChangeText={[Function]}
            placeholder="50"
            rejectResponderTermination={true}
            style={
              Object {
                "borderColor": "#959595",
                "borderWidth": 1,
                "flex": 1,
                "fontFamily": "Abel",
                "fontSize": 30,
                "paddingLeft": 10,
              }
            }
            testID="input-Value"
            underlineColorAndroid="transparent"
            value="200"
          />
          <View
            accessible={true}
            focusable={true}
            isTVSelectable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "marginLeft": 10,
                "marginTop": 13,
                "opacity": 1,
              }
            }
            testID="help-Value"
          >
            <
              color="#959595"
              icon={
                Object {
                  "icon": Array [
                    384,
                    512,
                    Array [],
                    "f128",
                    "M202.021 0C122.202 0 70.503 32.703 29.914 91.026c-7.363 10.58-5.093 25.086 5.178 32.874l43.138 32.709c10.373 7.865 25.132 6.026 33.253-4.148 25.049-31.381 43.63-49.449 82.757-49.449 30.764 0 68.816 19.799 68.816 49.631 0 22.552-18.617 34.134-48.993 51.164-35.423 19.86-82.299 44.576-82.299 106.405V320c0 13.255 10.745 24 24 24h72.471c13.255 0 24-10.745 24-24v-5.773c0-42.86 125.268-44.645 125.268-160.627C377.504 66.256 286.902 0 202.021 0zM192 373.459c-38.196 0-69.271 31.075-69.271 69.271 0 38.195 31.075 69.27 69.271 69.27s69.271-31.075 69.271-69.271-31.075-69.27-69.271-69.27z",
                  ],
                  "iconName": "question",
                  "prefix": "fas",
                }
              }
              size={30}
            />
          </View>
        </View>
        <View />
      </View>
      <View
        style={
          Object {
            "marginBottom": 15,
          }
        }
      >
        <Text
          style={
            Array [
              Object {
                "color": "#959595",
                "fontFamily": "Abel",
                "fontSize": 20,
                "margin": 0,
                "padding": 0,
              },
            ]
          }
        >
          Modifier
        </Text>
        <View
          style={
            Object {
              "flexDirection": "row",
            }
          }
        >
          <TextInput
            allowFontScaling={true}
            keyboardType="numeric"
            onChangeText={[Function]}
            placeholder="2"
            rejectResponderTermination={true}
            style={
              Object {
                "borderColor": "#959595",
                "borderWidth": 1,
                "flex": 1,
                "fontFamily": "Abel",
                "fontSize": 30,
                "paddingLeft": 10,
              }
            }
            testID="input-Modifier"
            underlineColorAndroid="transparent"
            value="10"
          />
          <View
            accessible={true}
            focusable={true}
            isTVSelectable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "marginLeft": 10,
                "marginTop": 13,
                "opacity": 1,
              }
            }
            testID="help-Modifier"
          >
            <
              color="#959595"
              icon={
                Object {
                  "icon": Array [
                    384,
                    512,
                    Array [],
                    "f128",
                    "M202.021 0C122.202 0 70.503 32.703 29.914 91.026c-7.363 10.58-5.093 25.086 5.178 32.874l43.138 32.709c10.373 7.865 25.132 6.026 33.253-4.148 25.049-31.381 43.63-49.449 82.757-49.449 30.764 0 68.816 19.799 68.816 49.631 0 22.552-18.617 34.134-48.993 51.164-35.423 19.86-82.299 44.576-82.299 106.405V320c0 13.255 10.745 24 24 24h72.471c13.255 0 24-10.745 24-24v-5.773c0-42.86 125.268-44.645 125.268-160.627C377.504 66.256 286.902 0 202.021 0zM192 373.459c-38.196 0-69.271 31.075-69.271 69.271 0 38.195 31.075 69.27 69.271 69.27s69.271-31.075 69.271-69.271-31.075-69.27-69.271-69.27z",
                  ],
                  "iconName": "question",
                  "prefix": "fas",
                }
              }
              size={30}
            />
          </View>
        </View>
        <View />
      </View>
      <View
        style={
          Object {
            "marginBottom": 15,
          }
        }
      >
        <Text
          style={
            Array [
              Object {
                "color": "#959595",
                "fontFamily": "Abel",
                "fontSize": 20,
                "margin": 0,
                "padding": 0,
              },
            ]
          }
        >
          Slack Days
        </Text>
        <View
          style={
            Object {
              "flexDirection": "row",
            }
          }
        >
          <TextInput
            allowFontScaling={true}
            keyboardType="numeric"
            onChangeText={[Function]}
            placeholder="0"
            rejectResponderTermination={true}
            style={
              Object {
                "borderColor": "#959595",
                "borderWidth": 1,
                "flex": 1,
                "fontFamily": "Abel",
                "fontSize": 30,
                "paddingLeft": 10,
              }
            }
            testID="input-Slack-Days"
            underlineColorAndroid="transparent"
            value="1"
          />
          <View
            accessible={true}
            focusable={true}
            isTVSelectable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "marginLeft": 10,
                "marginTop": 13,
                "opacity": 1,
              }
            }
            testID="help-Slack-Days"
          >
            <
              color="#959595"
              icon={
                Object {
                  "icon": Array [
                    384,
                    512,
                    Array [],
                    "f128",
                    "M202.021 0C122.202 0 70.503 32.703 29.914 91.026c-7.363 10.58-5.093 25.086 5.178 32.874l43.138 32.709c10.373 7.865 25.132 6.026 33.253-4.148 25.049-31.381 43.63-49.449 82.757-49.449 30.764 0 68.816 19.799 68.816 49.631 0 22.552-18.617 34.134-48.993 51.164-35.423 19.86-82.299 44.576-82.299 106.405V320c0 13.255 10.745 24 24 24h72.471c13.255 0 24-10.745 24-24v-5.773c0-42.86 125.268-44.645 125.268-160.627C377.504 66.256 286.902 0 202.021 0zM192 373.459c-38.196 0-69.271 31.075-69.271 69.271 0 38.195 31.075 69.27 69.271 69.27s69.271-31.075 69.271-69.271-31.075-69.27-69.271-69.27z",
                  ],
                  "iconName": "question",
                  "prefix": "fas",
                }
              }
              size={30}
            />
          </View>
        </View>
        <View />
      </View>
      <View>
        <Text
          style={
            Array [
              Object {
                "color": "#959595",
                "fontFamily": "Abel",
                "fontSize": 20,
                "margin": 0,
                "padding": 0,
              },
            ]
          }
        >
          Color
        </Text>
        <View
          style={
            Object {
              "flexDirection": "row",
              "flexWrap": "wrap",
              "justifyContent": "space-between",
              "marginBottom": 10,
            }
          }
        >
          <View
            accessible={true}
            focusable={true}
            isTVSelectable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "backgroundColor": "#8066C2",
                "borderColor": "#959595",
                "borderRadius": 4,
                "borderStyle": "dotted",
                "borderWidth": 4,
                "height": 60,
                "marginBottom": 10,
                "marginRight": 10,
                "opacity": 1,
                "width": 60,
              }
            }
            testID="color-#8066C2"
          />
          <View
            accessible={true}
            focusable={true}
            isTVSelectable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "backgroundColor": "#E04747",
                "borderRadius": 4,
                "height": 60,
                "marginBottom": 10,
                "marginRight": 10,
                "opacity": 1,
                "width": 60,
              }
            }
            testID="color-#E04747"
          />
          <View
            accessible={true}
            focusable={true}
            isTVSelectable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "backgroundColor": "#2AAD5E",
                "borderRadius": 4,
                "height": 60,
                "marginBottom": 10,
                "marginRight": 10,
                "opacity": 1,
                "width": 60,
              }
            }
            testID="color-#2AAD5E"
          />
          <View
            accessible={true}
            focusable={true}
            isTVSelectable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "backgroundColor": "#B1B952",
                "borderRadius": 4,
                "height": 60,
                "marginBottom": 10,
                "marginRight": 10,
                "opacity": 1,
                "width": 60,
              }
            }
            testID="color-#B1B952"
          />
          <View
            accessible={true}
            focusable={true}
            isTVSelectable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "backgroundColor": "#7F90EC",
                "borderRadius": 4,
                "height": 60,
                "marginBottom": 10,
                "marginRight": 10,
                "opacity": 1,
                "width": 60,
              }
            }
            testID="color-#7F90EC"
          />
          <View
            accessible={true}
            focusable={true}
            isTVSelectable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "backgroundColor": "#37353C",
                "borderRadius": 4,
                "height": 60,
                "marginBottom": 10,
                "marginRight": 10,
                "opacity": 1,
                "width": 60,
              }
            }
            testID="color-#37353C"
          />
          <View
            accessible={true}
            focusable={true}
            isTVSelectable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "backgroundColor": "#E64CE9",
                "borderRadius": 4,
                "height": 60,
                "marginBottom": 10,
                "marginRight": 10,
                "opacity": 1,
                "width": 60,
              }
            }
            testID="color-#E64CE9"
          />
          <View
            accessible={true}
            focusable={true}
            isTVSelectable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "backgroundColor": "#EB712D",
                "borderRadius": 4,
                "height": 60,
                "marginBottom": 10,
                "marginRight": 10,
                "opacity": 1,
                "width": 60,
              }
            }
            testID="color-#EB712D"
          />
        </View>
      </View>
      <View
        accessible={true}
        focusable={true}
        isTVSelectable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "backgroundColor": "#959595",
            "borderRadius": 10,
            "marginBottom": 10,
            "opacity": 1,
            "width": "100%",
          }
        }
        testID="button-submit"
      >
        <Text
          style={
            Array [
              Object {
                "alignSelf": "center",
                "color": "#ffffff",
                "fontFamily": "Abel",
                "fontSize": 30,
                "padding": 10,
                "textAlign": "center",
                "width": "100%",
              },
            ]
          }
        >
          Done
        </Text>
      </View>
      <View
        accessible={true}
        focusable={true}
        isTVSelectable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "backgroundColor": "#b02f1e",
            "borderRadius": 10,
            "marginBottom": 10,
            "opacity": 1,
            "width": "100%",
          }
        }
        testID="button-delete"
      >
        <Text
          style={
            Array [
              Object {
                "alignSelf": "center",
                "color": "#ffffff",
                "fontFamily": "Abel",
                "fontSize": 30,
                "padding": 10,
                "textAlign": "center",
                "width": "100%",
              },
            ]
          }
        >
          Delete
        </Text>
      </View>
    </View>
  </View>
</RCTScrollView>
`;

exports[`Habbajet Form Component can render a filled-out form 1`] = `
<RCTScrollView>
  <View>
    <View
      style={
        Object {
          "backgroundColor": "#ffffff",
          "height": "100%",
          "paddingHorizontal": 20,
          "paddingVertical": 10,
        }
      }
    >
      <View
        style={
          Object {
            "marginBottom": 15,
          }
        }
      >
        <Text
          style={
            Array [
              Object {
                "color": "#959595",
                "fontFamily": "Abel",
                "fontSize": 20,
                "margin": 0,
                "padding": 0,
              },
            ]
          }
        >
          Name
        </Text>
        <View
          style={
            Object {
              "flexDirection": "row",
            }
          }
        >
          <TextInput
            allowFontScaling={true}
            keyboardType="default"
            onChangeText={[Function]}
            rejectResponderTermination={true}
            style={
              Object {
                "borderColor": "#959595",
                "borderWidth": 1,
                "flex": 1,
                "fontFamily": "Abel",
                "fontSize": 30,
                "paddingLeft": 10,
              }
            }
            testID="input-Name"
            underlineColorAndroid="transparent"
            value="Name"
          />
        </View>
        <View />
      </View>
      <View
        style={
          Object {
            "marginBottom": 15,
          }
        }
      >
        <Text
          style={
            Array [
              Object {
                "color": "#959595",
                "fontFamily": "Abel",
                "fontSize": 20,
                "margin": 0,
                "padding": 0,
              },
            ]
          }
        >
          Value
        </Text>
        <View
          style={
            Object {
              "flexDirection": "row",
            }
          }
        >
          <TextInput
            allowFontScaling={true}
            keyboardType="numeric"
            onChangeText={[Function]}
            placeholder="50"
            rejectResponderTermination={true}
            style={
              Object {
                "borderColor": "#959595",
                "borderWidth": 1,
                "flex": 1,
                "fontFamily": "Abel",
                "fontSize": 30,
                "paddingLeft": 10,
              }
            }
            testID="input-Value"
            underlineColorAndroid="transparent"
            value="200"
          />
          <View
            accessible={true}
            focusable={true}
            isTVSelectable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "marginLeft": 10,
                "marginTop": 13,
                "opacity": 1,
              }
            }
            testID="help-Value"
          >
            <
              color="#959595"
              icon={
                Object {
                  "icon": Array [
                    384,
                    512,
                    Array [],
                    "f128",
                    "M202.021 0C122.202 0 70.503 32.703 29.914 91.026c-7.363 10.58-5.093 25.086 5.178 32.874l43.138 32.709c10.373 7.865 25.132 6.026 33.253-4.148 25.049-31.381 43.63-49.449 82.757-49.449 30.764 0 68.816 19.799 68.816 49.631 0 22.552-18.617 34.134-48.993 51.164-35.423 19.86-82.299 44.576-82.299 106.405V320c0 13.255 10.745 24 24 24h72.471c13.255 0 24-10.745 24-24v-5.773c0-42.86 125.268-44.645 125.268-160.627C377.504 66.256 286.902 0 202.021 0zM192 373.459c-38.196 0-69.271 31.075-69.271 69.271 0 38.195 31.075 69.27 69.271 69.27s69.271-31.075 69.271-69.271-31.075-69.27-69.271-69.27z",
                  ],
                  "iconName": "question",
                  "prefix": "fas",
                }
              }
              size={30}
            />
          </View>
        </View>
        <View />
      </View>
      <View
        style={
          Object {
            "marginBottom": 15,
          }
        }
      >
        <Text
          style={
            Array [
              Object {
                "color": "#959595",
                "fontFamily": "Abel",
                "fontSize": 20,
                "margin": 0,
                "padding": 0,
              },
            ]
          }
        >
          Modifier
        </Text>
        <View
          style={
            Object {
              "flexDirection": "row",
            }
          }
        >
          <TextInput
            allowFontScaling={true}
            keyboardType="numeric"
            onChangeText={[Function]}
            placeholder="2"
            rejectResponderTermination={true}
            style={
              Object {
                "borderColor": "#959595",
                "borderWidth": 1,
                "flex": 1,
                "fontFamily": "Abel",
                "fontSize": 30,
                "paddingLeft": 10,
              }
            }
            testID="input-Modifier"
            underlineColorAndroid="transparent"
            value="10"
          />
          <View
            accessible={true}
            focusable={true}
            isTVSelectable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "marginLeft": 10,
                "marginTop": 13,
                "opacity": 1,
              }
            }
            testID="help-Modifier"
          >
            <
              color="#959595"
              icon={
                Object {
                  "icon": Array [
                    384,
                    512,
                    Array [],
                    "f128",
                    "M202.021 0C122.202 0 70.503 32.703 29.914 91.026c-7.363 10.58-5.093 25.086 5.178 32.874l43.138 32.709c10.373 7.865 25.132 6.026 33.253-4.148 25.049-31.381 43.63-49.449 82.757-49.449 30.764 0 68.816 19.799 68.816 49.631 0 22.552-18.617 34.134-48.993 51.164-35.423 19.86-82.299 44.576-82.299 106.405V320c0 13.255 10.745 24 24 24h72.471c13.255 0 24-10.745 24-24v-5.773c0-42.86 125.268-44.645 125.268-160.627C377.504 66.256 286.902 0 202.021 0zM192 373.459c-38.196 0-69.271 31.075-69.271 69.271 0 38.195 31.075 69.27 69.271 69.27s69.271-31.075 69.271-69.271-31.075-69.27-69.271-69.27z",
                  ],
                  "iconName": "question",
                  "prefix": "fas",
                }
              }
              size={30}
            />
          </View>
        </View>
        <View />
      </View>
      <View
        style={
          Object {
            "marginBottom": 15,
          }
        }
      >
        <Text
          style={
            Array [
              Object {
                "color": "#959595",
                "fontFamily": "Abel",
                "fontSize": 20,
                "margin": 0,
                "padding": 0,
              },
            ]
          }
        >
          Slack Days
        </Text>
        <View
          style={
            Object {
              "flexDirection": "row",
            }
          }
        >
          <TextInput
            allowFontScaling={true}
            keyboardType="numeric"
            onChangeText={[Function]}
            placeholder="0"
            rejectResponderTermination={true}
            style={
              Object {
                "borderColor": "#959595",
                "borderWidth": 1,
                "flex": 1,
                "fontFamily": "Abel",
                "fontSize": 30,
                "paddingLeft": 10,
              }
            }
            testID="input-Slack-Days"
            underlineColorAndroid="transparent"
            value="1"
          />
          <View
            accessible={true}
            focusable={true}
            isTVSelectable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "marginLeft": 10,
                "marginTop": 13,
                "opacity": 1,
              }
            }
            testID="help-Slack-Days"
          >
            <
              color="#959595"
              icon={
                Object {
                  "icon": Array [
                    384,
                    512,
                    Array [],
                    "f128",
                    "M202.021 0C122.202 0 70.503 32.703 29.914 91.026c-7.363 10.58-5.093 25.086 5.178 32.874l43.138 32.709c10.373 7.865 25.132 6.026 33.253-4.148 25.049-31.381 43.63-49.449 82.757-49.449 30.764 0 68.816 19.799 68.816 49.631 0 22.552-18.617 34.134-48.993 51.164-35.423 19.86-82.299 44.576-82.299 106.405V320c0 13.255 10.745 24 24 24h72.471c13.255 0 24-10.745 24-24v-5.773c0-42.86 125.268-44.645 125.268-160.627C377.504 66.256 286.902 0 202.021 0zM192 373.459c-38.196 0-69.271 31.075-69.271 69.271 0 38.195 31.075 69.27 69.271 69.27s69.271-31.075 69.271-69.271-31.075-69.27-69.271-69.27z",
                  ],
                  "iconName": "question",
                  "prefix": "fas",
                }
              }
              size={30}
            />
          </View>
        </View>
        <View />
      </View>
      <View>
        <Text
          style={
            Array [
              Object {
                "color": "#959595",
                "fontFamily": "Abel",
                "fontSize": 20,
                "margin": 0,
                "padding": 0,
              },
            ]
          }
        >
          Color
        </Text>
        <View
          style={
            Object {
              "flexDirection": "row",
              "flexWrap": "wrap",
              "justifyContent": "space-between",
              "marginBottom": 10,
            }
          }
        >
          <View
            accessible={true}
            focusable={true}
            isTVSelectable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "backgroundColor": "#8066C2",
                "borderColor": "#959595",
                "borderRadius": 4,
                "borderStyle": "dotted",
                "borderWidth": 4,
                "height": 60,
                "marginBottom": 10,
                "marginRight": 10,
                "opacity": 1,
                "width": 60,
              }
            }
            testID="color-#8066C2"
          />
          <View
            accessible={true}
            focusable={true}
            isTVSelectable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "backgroundColor": "#E04747",
                "borderRadius": 4,
                "height": 60,
                "marginBottom": 10,
                "marginRight": 10,
                "opacity": 1,
                "width": 60,
              }
            }
            testID="color-#E04747"
          />
          <View
            accessible={true}
            focusable={true}
            isTVSelectable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "backgroundColor": "#2AAD5E",
                "borderRadius": 4,
                "height": 60,
                "marginBottom": 10,
                "marginRight": 10,
                "opacity": 1,
                "width": 60,
              }
            }
            testID="color-#2AAD5E"
          />
          <View
            accessible={true}
            focusable={true}
            isTVSelectable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "backgroundColor": "#B1B952",
                "borderRadius": 4,
                "height": 60,
                "marginBottom": 10,
                "marginRight": 10,
                "opacity": 1,
                "width": 60,
              }
            }
            testID="color-#B1B952"
          />
          <View
            accessible={true}
            focusable={true}
            isTVSelectable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "backgroundColor": "#7F90EC",
                "borderRadius": 4,
                "height": 60,
                "marginBottom": 10,
                "marginRight": 10,
                "opacity": 1,
                "width": 60,
              }
            }
            testID="color-#7F90EC"
          />
          <View
            accessible={true}
            focusable={true}
            isTVSelectable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "backgroundColor": "#37353C",
                "borderRadius": 4,
                "height": 60,
                "marginBottom": 10,
                "marginRight": 10,
                "opacity": 1,
                "width": 60,
              }
            }
            testID="color-#37353C"
          />
          <View
            accessible={true}
            focusable={true}
            isTVSelectable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "backgroundColor": "#E64CE9",
                "borderRadius": 4,
                "height": 60,
                "marginBottom": 10,
                "marginRight": 10,
                "opacity": 1,
                "width": 60,
              }
            }
            testID="color-#E64CE9"
          />
          <View
            accessible={true}
            focusable={true}
            isTVSelectable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "backgroundColor": "#EB712D",
                "borderRadius": 4,
                "height": 60,
                "marginBottom": 10,
                "marginRight": 10,
                "opacity": 1,
                "width": 60,
              }
            }
            testID="color-#EB712D"
          />
        </View>
      </View>
      <View
        accessible={true}
        focusable={true}
        isTVSelectable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "backgroundColor": "#959595",
            "borderRadius": 10,
            "marginBottom": 10,
            "opacity": 1,
            "width": "100%",
          }
        }
        testID="button-submit"
      >
        <Text
          style={
            Array [
              Object {
                "alignSelf": "center",
                "color": "#ffffff",
                "fontFamily": "Abel",
                "fontSize": 30,
                "padding": 10,
                "textAlign": "center",
                "width": "100%",
              },
            ]
          }
        >
          Done
        </Text>
      </View>
    </View>
  </View>
</RCTScrollView>
`;

exports[`Habbajet Form Component can render a form with invalid entries 1`] = `
<RCTScrollView>
  <View>
    <View
      style={
        Object {
          "backgroundColor": "#ffffff",
          "height": "100%",
          "paddingHorizontal": 20,
          "paddingVertical": 10,
        }
      }
    >
      <View
        style={
          Object {
            "marginBottom": 15,
          }
        }
      >
        <Text
          style={
            Array [
              Object {
                "color": "#959595",
                "fontFamily": "Abel",
                "fontSize": 20,
                "margin": 0,
                "padding": 0,
              },
            ]
          }
        >
          Name
        </Text>
        <View
          style={
            Object {
              "flexDirection": "row",
            }
          }
        >
          <TextInput
            allowFontScaling={true}
            keyboardType="default"
            onChangeText={[Function]}
            rejectResponderTermination={true}
            style={
              Object {
                "borderColor": "#959595",
                "borderWidth": 1,
                "flex": 1,
                "fontFamily": "Abel",
                "fontSize": 30,
                "paddingLeft": 10,
              }
            }
            testID="input-Name"
            underlineColorAndroid="transparent"
            value="Name"
          />
        </View>
        <View />
      </View>
      <View
        style={
          Object {
            "marginBottom": 15,
          }
        }
      >
        <Text
          style={
            Array [
              Object {
                "color": "#959595",
                "fontFamily": "Abel",
                "fontSize": 20,
                "margin": 0,
                "padding": 0,
              },
            ]
          }
        >
          Value
        </Text>
        <View
          style={
            Object {
              "flexDirection": "row",
            }
          }
        >
          <TextInput
            allowFontScaling={true}
            keyboardType="numeric"
            onChangeText={[Function]}
            placeholder="50"
            rejectResponderTermination={true}
            style={
              Object {
                "borderColor": "#959595",
                "borderWidth": 1,
                "flex": 1,
                "fontFamily": "Abel",
                "fontSize": 30,
                "paddingLeft": 10,
              }
            }
            testID="input-Value"
            underlineColorAndroid="transparent"
            value="0"
          />
          <View
            accessible={true}
            focusable={true}
            isTVSelectable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "marginLeft": 10,
                "marginTop": 13,
                "opacity": 1,
              }
            }
            testID="help-Value"
          >
            <
              color="#959595"
              icon={
                Object {
                  "icon": Array [
                    384,
                    512,
                    Array [],
                    "f128",
                    "M202.021 0C122.202 0 70.503 32.703 29.914 91.026c-7.363 10.58-5.093 25.086 5.178 32.874l43.138 32.709c10.373 7.865 25.132 6.026 33.253-4.148 25.049-31.381 43.63-49.449 82.757-49.449 30.764 0 68.816 19.799 68.816 49.631 0 22.552-18.617 34.134-48.993 51.164-35.423 19.86-82.299 44.576-82.299 106.405V320c0 13.255 10.745 24 24 24h72.471c13.255 0 24-10.745 24-24v-5.773c0-42.86 125.268-44.645 125.268-160.627C377.504 66.256 286.902 0 202.021 0zM192 373.459c-38.196 0-69.271 31.075-69.271 69.271 0 38.195 31.075 69.27 69.271 69.27s69.271-31.075 69.271-69.271-31.075-69.27-69.271-69.27z",
                  ],
                  "iconName": "question",
                  "prefix": "fas",
                }
              }
              size={30}
            />
          </View>
        </View>
        <Text
          style={
            Array [
              Object {
                "color": "#959595",
                "fontFamily": "Abel",
                "fontSize": 20,
                "margin": 0,
                "padding": 0,
              },
              Object {
                "color": "#b02f1e",
              },
            ]
          }
        >
          Bad value
        </Text>
      </View>
      <View
        style={
          Object {
            "marginBottom": 15,
          }
        }
      >
        <Text
          style={
            Array [
              Object {
                "color": "#959595",
                "fontFamily": "Abel",
                "fontSize": 20,
                "margin": 0,
                "padding": 0,
              },
            ]
          }
        >
          Modifier
        </Text>
        <View
          style={
            Object {
              "flexDirection": "row",
            }
          }
        >
          <TextInput
            allowFontScaling={true}
            keyboardType="numeric"
            onChangeText={[Function]}
            placeholder="2"
            rejectResponderTermination={true}
            style={
              Object {
                "borderColor": "#959595",
                "borderWidth": 1,
                "flex": 1,
                "fontFamily": "Abel",
                "fontSize": 30,
                "paddingLeft": 10,
              }
            }
            testID="input-Modifier"
            underlineColorAndroid="transparent"
            value="10"
          />
          <View
            accessible={true}
            focusable={true}
            isTVSelectable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "marginLeft": 10,
                "marginTop": 13,
                "opacity": 1,
              }
            }
            testID="help-Modifier"
          >
            <
              color="#959595"
              icon={
                Object {
                  "icon": Array [
                    384,
                    512,
                    Array [],
                    "f128",
                    "M202.021 0C122.202 0 70.503 32.703 29.914 91.026c-7.363 10.58-5.093 25.086 5.178 32.874l43.138 32.709c10.373 7.865 25.132 6.026 33.253-4.148 25.049-31.381 43.63-49.449 82.757-49.449 30.764 0 68.816 19.799 68.816 49.631 0 22.552-18.617 34.134-48.993 51.164-35.423 19.86-82.299 44.576-82.299 106.405V320c0 13.255 10.745 24 24 24h72.471c13.255 0 24-10.745 24-24v-5.773c0-42.86 125.268-44.645 125.268-160.627C377.504 66.256 286.902 0 202.021 0zM192 373.459c-38.196 0-69.271 31.075-69.271 69.271 0 38.195 31.075 69.27 69.271 69.27s69.271-31.075 69.271-69.271-31.075-69.27-69.271-69.27z",
                  ],
                  "iconName": "question",
                  "prefix": "fas",
                }
              }
              size={30}
            />
          </View>
        </View>
        <View />
      </View>
      <View
        style={
          Object {
            "marginBottom": 15,
          }
        }
      >
        <Text
          style={
            Array [
              Object {
                "color": "#959595",
                "fontFamily": "Abel",
                "fontSize": 20,
                "margin": 0,
                "padding": 0,
              },
            ]
          }
        >
          Slack Days
        </Text>
        <View
          style={
            Object {
              "flexDirection": "row",
            }
          }
        >
          <TextInput
            allowFontScaling={true}
            keyboardType="numeric"
            onChangeText={[Function]}
            placeholder="0"
            rejectResponderTermination={true}
            style={
              Object {
                "borderColor": "#959595",
                "borderWidth": 1,
                "flex": 1,
                "fontFamily": "Abel",
                "fontSize": 30,
                "paddingLeft": 10,
              }
            }
            testID="input-Slack-Days"
            underlineColorAndroid="transparent"
            value="-1"
          />
          <View
            accessible={true}
            focusable={true}
            isTVSelectable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "marginLeft": 10,
                "marginTop": 13,
                "opacity": 1,
              }
            }
            testID="help-Slack-Days"
          >
            <
              color="#959595"
              icon={
                Object {
                  "icon": Array [
                    384,
                    512,
                    Array [],
                    "f128",
                    "M202.021 0C122.202 0 70.503 32.703 29.914 91.026c-7.363 10.58-5.093 25.086 5.178 32.874l43.138 32.709c10.373 7.865 25.132 6.026 33.253-4.148 25.049-31.381 43.63-49.449 82.757-49.449 30.764 0 68.816 19.799 68.816 49.631 0 22.552-18.617 34.134-48.993 51.164-35.423 19.86-82.299 44.576-82.299 106.405V320c0 13.255 10.745 24 24 24h72.471c13.255 0 24-10.745 24-24v-5.773c0-42.86 125.268-44.645 125.268-160.627C377.504 66.256 286.902 0 202.021 0zM192 373.459c-38.196 0-69.271 31.075-69.271 69.271 0 38.195 31.075 69.27 69.271 69.27s69.271-31.075 69.271-69.271-31.075-69.27-69.271-69.27z",
                  ],
                  "iconName": "question",
                  "prefix": "fas",
                }
              }
              size={30}
            />
          </View>
        </View>
        <Text
          style={
            Array [
              Object {
                "color": "#959595",
                "fontFamily": "Abel",
                "fontSize": 20,
                "margin": 0,
                "padding": 0,
              },
              Object {
                "color": "#b02f1e",
              },
            ]
          }
        >
          Bad slack
        </Text>
      </View>
      <View>
        <Text
          style={
            Array [
              Object {
                "color": "#959595",
                "fontFamily": "Abel",
                "fontSize": 20,
                "margin": 0,
                "padding": 0,
              },
            ]
          }
        >
          Color
        </Text>
        <View
          style={
            Object {
              "flexDirection": "row",
              "flexWrap": "wrap",
              "justifyContent": "space-between",
              "marginBottom": 10,
            }
          }
        >
          <View
            accessible={true}
            focusable={true}
            isTVSelectable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "backgroundColor": "#8066C2",
                "borderColor": "#959595",
                "borderRadius": 4,
                "borderStyle": "dotted",
                "borderWidth": 4,
                "height": 60,
                "marginBottom": 10,
                "marginRight": 10,
                "opacity": 1,
                "width": 60,
              }
            }
            testID="color-#8066C2"
          />
          <View
            accessible={true}
            focusable={true}
            isTVSelectable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "backgroundColor": "#E04747",
                "borderRadius": 4,
                "height": 60,
                "marginBottom": 10,
                "marginRight": 10,
                "opacity": 1,
                "width": 60,
              }
            }
            testID="color-#E04747"
          />
          <View
            accessible={true}
            focusable={true}
            isTVSelectable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "backgroundColor": "#2AAD5E",
                "borderRadius": 4,
                "height": 60,
                "marginBottom": 10,
                "marginRight": 10,
                "opacity": 1,
                "width": 60,
              }
            }
            testID="color-#2AAD5E"
          />
          <View
            accessible={true}
            focusable={true}
            isTVSelectable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "backgroundColor": "#B1B952",
                "borderRadius": 4,
                "height": 60,
                "marginBottom": 10,
                "marginRight": 10,
                "opacity": 1,
                "width": 60,
              }
            }
            testID="color-#B1B952"
          />
          <View
            accessible={true}
            focusable={true}
            isTVSelectable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "backgroundColor": "#7F90EC",
                "borderRadius": 4,
                "height": 60,
                "marginBottom": 10,
                "marginRight": 10,
                "opacity": 1,
                "width": 60,
              }
            }
            testID="color-#7F90EC"
          />
          <View
            accessible={true}
            focusable={true}
            isTVSelectable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "backgroundColor": "#37353C",
                "borderRadius": 4,
                "height": 60,
                "marginBottom": 10,
                "marginRight": 10,
                "opacity": 1,
                "width": 60,
              }
            }
            testID="color-#37353C"
          />
          <View
            accessible={true}
            focusable={true}
            isTVSelectable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "backgroundColor": "#E64CE9",
                "borderRadius": 4,
                "height": 60,
                "marginBottom": 10,
                "marginRight": 10,
                "opacity": 1,
                "width": 60,
              }
            }
            testID="color-#E64CE9"
          />
          <View
            accessible={true}
            focusable={true}
            isTVSelectable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "backgroundColor": "#EB712D",
                "borderRadius": 4,
                "height": 60,
                "marginBottom": 10,
                "marginRight": 10,
                "opacity": 1,
                "width": 60,
              }
            }
            testID="color-#EB712D"
          />
        </View>
      </View>
      <View
        accessible={true}
        focusable={true}
        isTVSelectable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "backgroundColor": "#959595",
            "borderRadius": 10,
            "marginBottom": 10,
            "opacity": 1,
            "width": "100%",
          }
        }
        testID="button-submit"
      >
        <Text
          style={
            Array [
              Object {
                "alignSelf": "center",
                "color": "#ffffff",
                "fontFamily": "Abel",
                "fontSize": 30,
                "padding": 10,
                "textAlign": "center",
                "width": "100%",
              },
            ]
          }
        >
          Done
        </Text>
      </View>
    </View>
  </View>
</RCTScrollView>
`;

exports[`Habbajet Form Component can render an empty habbajet form 1`] = `
<RCTScrollView>
  <View>
    <View
      style={
        Object {
          "backgroundColor": "#ffffff",
          "height": "100%",
          "paddingHorizontal": 20,
          "paddingVertical": 10,
        }
      }
    >
      <View
        style={
          Object {
            "marginBottom": 15,
          }
        }
      >
        <Text
          style={
            Array [
              Object {
                "color": "#959595",
                "fontFamily": "Abel",
                "fontSize": 20,
                "margin": 0,
                "padding": 0,
              },
            ]
          }
        >
          Name
        </Text>
        <View
          style={
            Object {
              "flexDirection": "row",
            }
          }
        >
          <TextInput
            allowFontScaling={true}
            keyboardType="default"
            onChangeText={[Function]}
            rejectResponderTermination={true}
            style={
              Object {
                "borderColor": "#959595",
                "borderWidth": 1,
                "flex": 1,
                "fontFamily": "Abel",
                "fontSize": 30,
                "paddingLeft": 10,
              }
            }
            testID="input-Name"
            underlineColorAndroid="transparent"
            value=""
          />
        </View>
        <View />
      </View>
      <View
        style={
          Object {
            "marginBottom": 15,
          }
        }
      >
        <Text
          style={
            Array [
              Object {
                "color": "#959595",
                "fontFamily": "Abel",
                "fontSize": 20,
                "margin": 0,
                "padding": 0,
              },
            ]
          }
        >
          Value
        </Text>
        <View
          style={
            Object {
              "flexDirection": "row",
            }
          }
        >
          <TextInput
            allowFontScaling={true}
            keyboardType="numeric"
            onChangeText={[Function]}
            placeholder="50"
            rejectResponderTermination={true}
            style={
              Object {
                "borderColor": "#959595",
                "borderWidth": 1,
                "flex": 1,
                "fontFamily": "Abel",
                "fontSize": 30,
                "paddingLeft": 10,
              }
            }
            testID="input-Value"
            underlineColorAndroid="transparent"
            value=""
          />
          <View
            accessible={true}
            focusable={true}
            isTVSelectable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "marginLeft": 10,
                "marginTop": 13,
                "opacity": 1,
              }
            }
            testID="help-Value"
          >
            <
              color="#959595"
              icon={
                Object {
                  "icon": Array [
                    384,
                    512,
                    Array [],
                    "f128",
                    "M202.021 0C122.202 0 70.503 32.703 29.914 91.026c-7.363 10.58-5.093 25.086 5.178 32.874l43.138 32.709c10.373 7.865 25.132 6.026 33.253-4.148 25.049-31.381 43.63-49.449 82.757-49.449 30.764 0 68.816 19.799 68.816 49.631 0 22.552-18.617 34.134-48.993 51.164-35.423 19.86-82.299 44.576-82.299 106.405V320c0 13.255 10.745 24 24 24h72.471c13.255 0 24-10.745 24-24v-5.773c0-42.86 125.268-44.645 125.268-160.627C377.504 66.256 286.902 0 202.021 0zM192 373.459c-38.196 0-69.271 31.075-69.271 69.271 0 38.195 31.075 69.27 69.271 69.27s69.271-31.075 69.271-69.271-31.075-69.27-69.271-69.27z",
                  ],
                  "iconName": "question",
                  "prefix": "fas",
                }
              }
              size={30}
            />
          </View>
        </View>
        <View />
      </View>
      <View
        style={
          Object {
            "marginBottom": 15,
          }
        }
      >
        <Text
          style={
            Array [
              Object {
                "color": "#959595",
                "fontFamily": "Abel",
                "fontSize": 20,
                "margin": 0,
                "padding": 0,
              },
            ]
          }
        >
          Modifier
        </Text>
        <View
          style={
            Object {
              "flexDirection": "row",
            }
          }
        >
          <TextInput
            allowFontScaling={true}
            keyboardType="numeric"
            onChangeText={[Function]}
            placeholder="2"
            rejectResponderTermination={true}
            style={
              Object {
                "borderColor": "#959595",
                "borderWidth": 1,
                "flex": 1,
                "fontFamily": "Abel",
                "fontSize": 30,
                "paddingLeft": 10,
              }
            }
            testID="input-Modifier"
            underlineColorAndroid="transparent"
            value=""
          />
          <View
            accessible={true}
            focusable={true}
            isTVSelectable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "marginLeft": 10,
                "marginTop": 13,
                "opacity": 1,
              }
            }
            testID="help-Modifier"
          >
            <
              color="#959595"
              icon={
                Object {
                  "icon": Array [
                    384,
                    512,
                    Array [],
                    "f128",
                    "M202.021 0C122.202 0 70.503 32.703 29.914 91.026c-7.363 10.58-5.093 25.086 5.178 32.874l43.138 32.709c10.373 7.865 25.132 6.026 33.253-4.148 25.049-31.381 43.63-49.449 82.757-49.449 30.764 0 68.816 19.799 68.816 49.631 0 22.552-18.617 34.134-48.993 51.164-35.423 19.86-82.299 44.576-82.299 106.405V320c0 13.255 10.745 24 24 24h72.471c13.255 0 24-10.745 24-24v-5.773c0-42.86 125.268-44.645 125.268-160.627C377.504 66.256 286.902 0 202.021 0zM192 373.459c-38.196 0-69.271 31.075-69.271 69.271 0 38.195 31.075 69.27 69.271 69.27s69.271-31.075 69.271-69.271-31.075-69.27-69.271-69.27z",
                  ],
                  "iconName": "question",
                  "prefix": "fas",
                }
              }
              size={30}
            />
          </View>
        </View>
        <View />
      </View>
      <View
        style={
          Object {
            "marginBottom": 15,
          }
        }
      >
        <Text
          style={
            Array [
              Object {
                "color": "#959595",
                "fontFamily": "Abel",
                "fontSize": 20,
                "margin": 0,
                "padding": 0,
              },
            ]
          }
        >
          Slack Days
        </Text>
        <View
          style={
            Object {
              "flexDirection": "row",
            }
          }
        >
          <TextInput
            allowFontScaling={true}
            keyboardType="numeric"
            onChangeText={[Function]}
            placeholder="0"
            rejectResponderTermination={true}
            style={
              Object {
                "borderColor": "#959595",
                "borderWidth": 1,
                "flex": 1,
                "fontFamily": "Abel",
                "fontSize": 30,
                "paddingLeft": 10,
              }
            }
            testID="input-Slack-Days"
            underlineColorAndroid="transparent"
            value="0"
          />
          <View
            accessible={true}
            focusable={true}
            isTVSelectable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "marginLeft": 10,
                "marginTop": 13,
                "opacity": 1,
              }
            }
            testID="help-Slack-Days"
          >
            <
              color="#959595"
              icon={
                Object {
                  "icon": Array [
                    384,
                    512,
                    Array [],
                    "f128",
                    "M202.021 0C122.202 0 70.503 32.703 29.914 91.026c-7.363 10.58-5.093 25.086 5.178 32.874l43.138 32.709c10.373 7.865 25.132 6.026 33.253-4.148 25.049-31.381 43.63-49.449 82.757-49.449 30.764 0 68.816 19.799 68.816 49.631 0 22.552-18.617 34.134-48.993 51.164-35.423 19.86-82.299 44.576-82.299 106.405V320c0 13.255 10.745 24 24 24h72.471c13.255 0 24-10.745 24-24v-5.773c0-42.86 125.268-44.645 125.268-160.627C377.504 66.256 286.902 0 202.021 0zM192 373.459c-38.196 0-69.271 31.075-69.271 69.271 0 38.195 31.075 69.27 69.271 69.27s69.271-31.075 69.271-69.271-31.075-69.27-69.271-69.27z",
                  ],
                  "iconName": "question",
                  "prefix": "fas",
                }
              }
              size={30}
            />
          </View>
        </View>
        <View />
      </View>
      <View>
        <Text
          style={
            Array [
              Object {
                "color": "#959595",
                "fontFamily": "Abel",
                "fontSize": 20,
                "margin": 0,
                "padding": 0,
              },
            ]
          }
        >
          Color
        </Text>
        <View
          style={
            Object {
              "flexDirection": "row",
              "flexWrap": "wrap",
              "justifyContent": "space-between",
              "marginBottom": 10,
            }
          }
        >
          <View
            accessible={true}
            focusable={true}
            isTVSelectable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "backgroundColor": "#8066C2",
                "borderColor": "#959595",
                "borderRadius": 4,
                "borderStyle": "dotted",
                "borderWidth": 4,
                "height": 60,
                "marginBottom": 10,
                "marginRight": 10,
                "opacity": 1,
                "width": 60,
              }
            }
            testID="color-#8066C2"
          />
          <View
            accessible={true}
            focusable={true}
            isTVSelectable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "backgroundColor": "#E04747",
                "borderRadius": 4,
                "height": 60,
                "marginBottom": 10,
                "marginRight": 10,
                "opacity": 1,
                "width": 60,
              }
            }
            testID="color-#E04747"
          />
          <View
            accessible={true}
            focusable={true}
            isTVSelectable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "backgroundColor": "#2AAD5E",
                "borderRadius": 4,
                "height": 60,
                "marginBottom": 10,
                "marginRight": 10,
                "opacity": 1,
                "width": 60,
              }
            }
            testID="color-#2AAD5E"
          />
          <View
            accessible={true}
            focusable={true}
            isTVSelectable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "backgroundColor": "#B1B952",
                "borderRadius": 4,
                "height": 60,
                "marginBottom": 10,
                "marginRight": 10,
                "opacity": 1,
                "width": 60,
              }
            }
            testID="color-#B1B952"
          />
          <View
            accessible={true}
            focusable={true}
            isTVSelectable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "backgroundColor": "#7F90EC",
                "borderRadius": 4,
                "height": 60,
                "marginBottom": 10,
                "marginRight": 10,
                "opacity": 1,
                "width": 60,
              }
            }
            testID="color-#7F90EC"
          />
          <View
            accessible={true}
            focusable={true}
            isTVSelectable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "backgroundColor": "#37353C",
                "borderRadius": 4,
                "height": 60,
                "marginBottom": 10,
                "marginRight": 10,
                "opacity": 1,
                "width": 60,
              }
            }
            testID="color-#37353C"
          />
          <View
            accessible={true}
            focusable={true}
            isTVSelectable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "backgroundColor": "#E64CE9",
                "borderRadius": 4,
                "height": 60,
                "marginBottom": 10,
                "marginRight": 10,
                "opacity": 1,
                "width": 60,
              }
            }
            testID="color-#E64CE9"
          />
          <View
            accessible={true}
            focusable={true}
            isTVSelectable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "backgroundColor": "#EB712D",
                "borderRadius": 4,
                "height": 60,
                "marginBottom": 10,
                "marginRight": 10,
                "opacity": 1,
                "width": 60,
              }
            }
            testID="color-#EB712D"
          />
        </View>
      </View>
      <View
        accessible={true}
        focusable={true}
        isTVSelectable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "backgroundColor": "#959595",
            "borderRadius": 10,
            "marginBottom": 10,
            "opacity": 1,
            "width": "100%",
          }
        }
        testID="button-submit"
      >
        <Text
          style={
            Array [
              Object {
                "alignSelf": "center",
                "color": "#ffffff",
                "fontFamily": "Abel",
                "fontSize": 30,
                "padding": 10,
                "textAlign": "center",
                "width": "100%",
              },
            ]
          }
        >
          Done
        </Text>
      </View>
    </View>
  </View>
</RCTScrollView>
`;
