// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Habbajet Screen Component will map state to a habbajet display 1`] = `
<View
  style={
    Object {
      "height": "100%",
    }
  }
>
  <RCTScrollView>
    <View>
      <View
        style={
          Object {
            "margin": 20,
          }
        }
      >
        <ARTSurfaceView
          style={
            Array [
              undefined,
              Object {
                "height": 710,
                "width": 710,
              },
            ]
          }
        >
          <ARTGroup
            opacity={1}
            transform={
              Array [
                6.123233995736766e-17,
                -1,
                1,
                6.123233995736766e-17,
                0,
                710,
              ]
            }
          >
            <ARTShape
              d={
                Array [
                  0,
                  532.5,
                  355,
                  4,
                  355,
                  355,
                  177.5,
                  0,
                  6.283185307179586,
                  1,
                ]
              }
              fill={null}
              opacity={1}
              stroke="#f5f5f5"
              strokeCap={1}
              strokeDash={null}
              strokeJoin={1}
              strokeWidth={355}
              transform={
                Array [
                  1,
                  0,
                  0,
                  1,
                  0,
                  0,
                ]
              }
            />
            <ARTGroup
              opacity={1}
              transform={
                Array [
                  1,
                  0,
                  0,
                  1,
                  0,
                  0,
                ]
              }
            />
          </ARTGroup>
        </ARTSurfaceView>
      </View>
      <View
        style={
          Object {
            "marginLeft": "20%",
          }
        }
      >
        <View>
          <Text
            style={
              Array [
                Object {
                  "fontFamily": "Abel",
                  "fontSize": 20,
                  "margin": 0,
                  "padding": 0,
                },
                Object {
                  "color": "#8066C2",
                },
              ]
            }
          >
            Expected Output
          </Text>
          <Text
            style={
              Array [
                Object {
                  "fontFamily": "Abel",
                  "marginTop": -10,
                  "padding": 0,
                },
                Object {
                  "fontSize": 50,
                },
              ]
            }
          >
            $100.00
          </Text>
        </View>
      </View>
    </View>
  </RCTScrollView>
  <View
    style={
      Array [
        Object {
          "flexDirection": "column",
          "padding": 10,
        },
        Object {
          "backgroundColor": "#8066C2",
        },
      ]
    }
  >
    <Text
      style={
        Array [
          Object {
            "alignSelf": "center",
            "color": "#fff",
            "fontFamily": "Abel",
            "fontSize": 30,
            "textAlign": "center",
            "width": "100%",
          },
        ]
      }
    >
      Monday, March 23rd
    </Text>
    <View
      style={
        Array [
          Object {
            "alignContent": "center",
            "flexDirection": "row",
            "justifyContent": "space-around",
          },
        ]
      }
    >
      <View
        accessible={true}
        focusable={false}
        isTVSelectable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
      >
        <
          color="#fff"
          icon={
            Object {
              "icon": Array [
                512,
                512,
                Array [],
                "f00c",
                "M173.898 439.404l-166.4-166.4c-9.997-9.997-9.997-26.206 0-36.204l36.203-36.204c9.997-9.998 26.207-9.998 36.204 0L192 312.69 432.095 72.596c9.997-9.997 26.207-9.997 36.204 0l36.203 36.204c9.997 9.997 9.997 26.206 0 36.204l-294.4 294.401c-9.998 9.997-26.207 9.997-36.204-.001z",
              ],
              "iconName": "check",
              "prefix": "fas",
            }
          }
          size={100}
        />
      </View>
      <View
        accessible={true}
        focusable={false}
        isTVSelectable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
      >
        <
          color="#fff"
          icon={
            Object {
              "icon": Array [
                352,
                512,
                Array [],
                "f00d",
                "M242.72 256l100.07-100.07c12.28-12.28 12.28-32.19 0-44.48l-22.24-22.24c-12.28-12.28-32.19-12.28-44.48 0L176 189.28 75.93 89.21c-12.28-12.28-32.19-12.28-44.48 0L9.21 111.45c-12.28 12.28-12.28 32.19 0 44.48L109.28 256 9.21 356.07c-12.28 12.28-12.28 32.19 0 44.48l22.24 22.24c12.28 12.28 32.2 12.28 44.48 0L176 322.72l100.07 100.07c12.28 12.28 32.2 12.28 44.48 0l22.24-22.24c12.28-12.28 12.28-32.19 0-44.48L242.72 256z",
              ],
              "iconName": "times",
              "prefix": "fas",
            }
          }
          size={100}
        />
      </View>
    </View>
  </View>
  <View />
</View>
`;
